{
  "category": "log",
  "sections": [
    {
      "title": "05.2024",
      "chats": [
        {
          "indexTitle": "24",
          "question": "24",
          "answer": "1. Add server build to engine_api i-lib.ps1\n2. Add server build to engine_api_multi i-lib.ps1\n3. Add server build to engine_api_server i-lib.ps1\n4. Add server build to engine i-lib.ps1\n5. Add server build to engine_server i-lib.ps1\n6. Add server build to engine_single i-lib.ps1\n7. Build server\n---\n1. Update script to build server\n2. Build and run server\n3. Remove config error, fetch is browser, not server\n---\n1. Copy EngineBuilderDirector to engine_server and make it fit server",
          "dateTime": "2024-05-24T22:03:05.854Z"
        },
        {
          "indexTitle": "28",
          "question": "28",
          "answer": "---\n1. Moved file path from ctor to param of async method\n   - this was very stinking becouse i seen async method run in ctor without await\n   - and also after new class was unable to load data again witch is stupid\n   - it is many reasons to put this file path param in async load method than to have it in ctor\n   - fixed builds of single, client, server\n---\n2. Load system selector data from json\n   - system builder proccess needed data in json\n   - this should make posibble to eventually move system builders to client and server projs, from single much esier",
          "dateTime": "2024-06-05T13:05:26.138Z"
        }
      ]
    },
    {
      "title": "06.2024",
      "chats": [
        {
          "indexTitle": "14",
          "question": "14",
          "answer": "1. Prepared test data for server and clients with\n   - components clientMovement and serverMovement\n   - systems of the same names\n   - scripts to build and run server & client\n   - run test\n---\n2. Tests\n   - prepare script to build and run single client\n   - prepare couple of Movment tests\n   - read ServerMovement system\n   - read Movement and ClientMovement system\n---\n3. Tests\n   - notes on Movement and ClientMovement system\n   - switched player id, two clients\n   - script for running second client\n   - removed fullscreen on click, needs full builds :(\n   - debuging:\n      * arrows dont run server ServerPlayerCache->setPlayerInput\n      * arrows dont make server recive event Server->Connection->socket.on(SocketEvents.ClientFrame, (inputDtoPlainData: any), (wsad do)\n      * ClientGameLoop->sendFrame, edit breakpoint with: this._inputDto.direction.length > 0\n      * problem is player1 is always chosen in any client as playable",
          "dateTime": "2024-06-14T21:12:15.486Z"
        },
        {
          "indexTitle": "16",
          "question": "16",
          "answer": "1. Create new project responsible for editor features\n   - create engine folder, add to workspace, copy proj files from football_single_desktop\n   - name proj in package.json\n   - remove dependencies\n   - npm i\n   - update script i-lib and it's package.json script in engine_api, engine, football\n   - update build script data and code\n   - build, serve and test \n2. Make editor menu, turn on/off based on config\n   - distracted with Canvas, need to refactor, there is 2 classes for Canvas\n   - refactor editorMenu class\n   - hide overlay with style\n   - class with static methods for manipulating style class\n   - refactored editor menu in editor\n   - added overlay class\n   - overlay and showOverlayBtn removed by default with style class\n   - config bit controls menu adding\n   - menu build in static method\n3. Create one Canvas class use it as singleton in renderer and canvas\n   - refactor Canvas class, improved, use it in renderer with composition\n   - rename UITool to UIBuilder\n   - refactor config, much better names, short but capture function, made any config posible, remove weird type constraint, now any config type fine\n   - fix test proj, hell of import type, chai has import, my modules commonjs, it was hard to match that\n   - todo: use newer imports ?, not commonjs, but first reaserch this, for now it works",
          "dateTime": "2024-06-16T22:41:13.241Z"
        },
        {
          "indexTitle": "17",
          "question": "17",
          "answer": "1. Menu for switching scenes\n   - disabled menu in single desktop\n   - script to run/serve editor\n   - refactored sketch proj to use config, to switch between prototypes/tests",
          "dateTime": "2024-06-17T17:40:46.621Z"
        },
        {
          "indexTitle": "18",
          "question": "18",
          "answer": " 2. Remove multi_api proj, merge to engine_api",
          "dateTime": "2024-06-18T12:16:46.948Z"
        },
        {
          "indexTitle": "19",
          "question": "19",
          "answer": "1. Remove runtime errors after merging libs and wrapping dependecies\n   - fix server bug, not set fileSystem wrapper\n   - todo: note that using ndb, one can input debugger keyword for breakpoint\n   - use FootballClientConfigurator to fix client bug of using one for single player\n   - fix server bug of unset port\n   - fix client server bug where wrappers for socket api functions where wrapping my data in arrays\n   - all these bug where introduced with changes, nessecery of course changes, but it shows one, the importance of tests and bug fixing after changes, and keeping code in this state, most important\n2. Try to further merge projects ?\n   - merge single and mobile single to renamed 'client' proj\n   - update config api and data, also enable switch between single desktop and mobile for test\n   - removed errors and fixed buld after single desktop and mobile merge\n   - all this shows, that project structure must be robust from the start and should not change really, during project, in other words it's important to have working projs structure\n   - my current structure is 2x proj for engine, 2x supporting for test and prototypes\n      * 1x for game library, 1x for client, 1x for server, i think this should work just fine for longer, more project is to long build\n      * if something would be moved to library, it should be something very robust and not changing and with tests, so it would not need to be added during build\n      * build with 4 proj, where libs are installed, fisrt to 3, second to 2, third to 1, is 2/3 minutes witch is max for me",
          "dateTime": "2024-06-19T15:35:13.238Z"
        },
        {
          "indexTitle": "20",
          "question": "20",
          "answer": "1. merge editor proj to client\n   - added config for configs, specific config selection in config\n   - merged editor, tested\n2. merge multi client proj to client\n   - update build scripts\n   - tested\n3. disable playerStats in desktop mode\n   - done in system\n   - desktop mode presents game, editor presents work version\n   - todo: playerStats should be removed from desktop mode football data, this is only for editor",
          "dateTime": "2024-06-20T17:05:18.253Z"
        },
        {
          "indexTitle": "21",
          "question": "21",
          "answer": "1. Reloading scenes, maybe\n   - menu\n   - clear engine data\n   - refactor data lodaing from builder to engine, broke input",
          "dateTime": "2024-06-22T21:07:59.374Z"
        },
        {
          "indexTitle": "22",
          "question": "22",
          "answer": "1. Scene reload",
          "dateTime": "2024-06-22T12:17:39.836Z"
        },
        {
          "indexTitle": "23",
          "question": "23",
          "answer": "1. fix intorduced bugs\n   - engine.initialize  for keyborad moved from getEngine to withEngine fixed input\n   - refactored data load so that clear all data is now possible",
          "dateTime": "2024-06-23T09:25:53.158Z"
        }
      ]
    }
  ]
}