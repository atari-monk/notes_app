{
  "sections": [
    {
      "title": "Notes",
      "chats": [
        {
          "indexTitle": "Create Project",
          "question": "Create Project",
          "answer": "Links:\n* [YT Playlist - Build a 2D Platformer Game in Unity | Unity Beginner Tutorial](https://www.youtube.com/watch?v=Ii-scMenaOQ&list=PLrnPJCHvNZuCVTz6lvhR81nnaf1a-b67U&index=1)  \n* [Github unity_2d_tutorial](https://github.com/atari-monk/unity_2d_tutorial)  \n\nInstall:\n1. Install Unity Hub manager  \n2. Install Unity with optional Visual Studio IDE code editor  \n(Unity Editor Version 2022.3.4f1)  \n3. In Unity Hub, click Create New Project  \n4. Input settings: 2D, name, path  \n5. Scene is like a level. Kepp 2D btn on for 2d view  \n\nBasic Controls:  \n1. To Pan the view, Middle mouse button, or Hand icon on   \n2. Zoom, Mouse wheel   \n3. To Control, use Icons (hand, arrows, circle ...) or keys qwerty  \n4. Views are dragable and customizable, on top right is layout menu, set default layout    ",
          "dateTime": "2024-02-12T12:19:17.498Z"
        },
        {
          "indexTitle": "Tilemap",
          "question": "Tilemap",
          "answer": "Assets:\n1. Window -> Asset Store -> Search Online  \n2. Type 0 $ in filter, find Pixel Adventure 1 in search, Open in Unity\n3. In package manager, download, import, keep all selected, import\n4. Now files are displayed in unity, go to assets click show in explorer to see files in file system\n5. Select Terrain tiles and set Pixels Per Unit to 16, Sprite Mode to multiple, Sprite editor button, apply  \n6. In maximized editor, Slice, Grid by cell size, set 16x16, Slice, Applay (top right), close sprite editor  \n\nTerrain:\n1. In hierarchy, add 2d object, tilemap, rectangular, rename to Terrain  \n2. Window -> 2d -> Tile Palete; create new palete, Create, select Asset folder\n3. Go to Assets find Terrain and drag png on Terrain Palete, create folder Tiles, select it to save tiles there\n4. You can now use tiles from Tile Palette to draw on scene\n5. Use tools in Tile Pallete (they have icons and keys) to select, move, draw rectangle with selected tiles\n6. Now again prepare tilemap for background, set 16 per unit, multiple, add new tilemap  \n7. Now click Sorting Layer, create 2 layers, put them in order of rendering and assign tilemaps to them  \n\nPlayer:\n1. Create a object in root of scene hierarchy, 2d obj, sprite, rectangular, F2 player, F to focus, W to move it\n2. Go to character sprites, select all, 16 per unit, applay, select idle, select first frame, drop it on players sprite field\n3. Add Rigidbody 2D component to player  \n4. Add Boxcollider 2D component to player  \n\nCollider:\n1. Add Tilemap Collider 2D component to Terrain\n2. You can hide Terrain with eye icon  \n3. Put Tile Palette tab on right panel so scene is bigger\n4. Add Composite Collider 2D for Terrain, check box Used by Composite in Tilemap Collider 2D, select static Body Type in Rigidbody 2D  \n5. Question mark in circle means link to online docs, component have it\n6. Box near component name is used to check.uncheck renderer, to see collision boundry or whatever  \n\nScript:\n1. Add script component to player, name it PlayerMovement\n2. Edit -> Preferances -> External Script Editor, I have Open by file extension for some reason\n3. Double click on script to open in ide editor",
          "dateTime": "2024-02-12T12:00:59.270Z"
        },
        {
          "indexTitle": "Player Movement",
          "question": "Player Movement",
          "answer": "Movement Script:\n1. Add script PlayerMovement.cs to Player  \n2. Write script  \n3. Edit->Project Settings->Input Manager,  \n4. Axes, default input system, jump, horizontal, so on  \n5. In Hierarchy, move camera on player to make it move with player  \n\nIdle animation:\n1. Go to Assets, Main Characters, Virtual Guy, there are animations here, already sliced  \n2. Right click, create, Animation file name it Player_Idle   \n3. Drag Player_Idle on Player, this creates file  \n4. Window->Animation  \n5. Now click arrow on Idle anim, shift select all images and drag them on Animation window  \n6. 3 dots, Show Frame Rate, set 18  \n7. Move Animation Window next to Console  \n\nRunning animation:\n1. Go to Animation File and check Loop Time  \n2. Create Animation File Player_Running  \n3. Add images in Animation to running animation file, set 32 samples for frame rate  \n4. Turn on loop time on running Animation File \n\nAnimator:\n1. Now open, Window, Animation, Animator \n2. Go to Animator and make two directional transition beetwen idle and running with select and right click  \n3. Then add running bool Parameter in Animator Parameters tab  \n4. Select arrow from idle to running, uncheck has exit Time, Settings Transition Duration 0  \n5. Conditions, plus, select running  \n6. Do similar for running idle arrow but switch running condition to false  \n7. Move Animator window next to Console  \n\nMovement Script Update and test: \n1. Update script and animation should switch  \n2. There was a bug becouse there was empty record in conditions tab (removed and worked)  ",
          "dateTime": "2024-02-12T12:18:11.862Z"
        },
        {
          "indexTitle": "Script Custom Components",
          "question": "Script Custom Components",
          "answer": "```C#\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour \n{\n    private Rigidbody2D rb;\n    private BoxCollider2D coll;\n    private SpriteRenderer sprite;\n    private Animator anim;\n\n    [SerializeField] private LayerMask jumplableGround;\n\n    private float dirX = 0f;\n    [SerializeField] private float moveSpeed = 7f;\n    [SerializeField] private float jumpForce = 14f;\n\n    private enum MovementState { idle, running, jumping, falling  }\n    private MovementState state = MovementState.idle;\n\n    private void Start() {\n        rb = GetComponent<Rigidbody2D>();\n        coll = GetComponent<BoxCollider2D>();\n        sprite = GetComponent<SpriteRenderer>();\n        anim = GetComponent<Animator>();\n    }\n\n    private void Update() \n    {\n        dirX = Input.GetAxisRaw(\"Horizontal\");\n        rb.velocity = new Vector2(dirX * moveSpeed, rb.velocity.y);\n\n        if (Input.GetButtonDown(\"Jump\") && IsGrounded()) \n        {\n            rb.velocity = new Vector2(rb.velocity.x, jumpForce);\n        }\n\n        UpdateAnimationState();\n    }\n\n    private void UpdateAnimationState() \n    {\n        MovementState state;\n\n        if (dirX > 0f) \n        {\n            state = MovementState.running;\n            sprite.flipX = false;\n        } \n        else if (dirX < 0f) \n        {\n            state = MovementState.running;\n            sprite.flipX = true;\n        } \n        else \n        {\n            state = MovementState.idle;\n        }\n\n        if (rb.velocity.y > .1f) {\n            state = MovementState.jumping;\n        } \n        else if (rb.velocity.y < -.1f) \n        {\n            state = MovementState.falling;\n        }\n\n        anim.SetInteger(\"state\", (int)state);\n    }\n\n    private bool IsGrounded() \n    {\n        return Physics2D.BoxCast(coll.bounds.center, coll.bounds.size, 0f, Vector2.down, .1f, jumplableGround);\n    }\n}\n```\n```C#\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\n\npublic class PlayerLife : MonoBehaviour\n{\n    private Rigidbody2D rb;\n    private Animator anim;\n\n    void Start()\n    {\n        rb = GetComponent<Rigidbody2D>();\n        anim = GetComponent<Animator>();\n    }\n\n    private void OnCollisionEnter2D(Collision2D collision) {\n        if (collision.gameObject.CompareTag(\"Trap\")) \n        {\n            Die();\n        }\n    }\n\n    private void Die() \n    {\n        rb.bodyType = RigidbodyType2D.Static;\n        anim.SetTrigger(\"death\");\n    }\n\n    private void RestartLevel() \n    {\n        SceneManager.LoadScene(SceneManager.GetActiveScene().name);\n    }\n}\n```\n```C#\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class ItemCollector : MonoBehaviour\n{\n    private int cherries = 0;\n\n    [SerializeField] private Text cherriesText;\n\n    private void OnTriggerEnter2D(Collider2D collision) \n    {\n        if (collision.gameObject.CompareTag(\"Cherry\")) \n        {\n            Destroy(collision.gameObject);\n            cherries++;\n            cherriesText.text = \"Cherries: \" + cherries;\n        }\n    }\n}\n```\n```C#\nusing UnityEngine;\n\npublic class CameraController : MonoBehaviour\n{\n    [SerializeField] private Transform player;\n\n    private void Update()\n    {\n        transform.position = new Vector3(player.position.x, player.position.y, transform.position.z);\n    }\n}\n```\n",
          "dateTime": "2024-02-12T12:12:25.344Z"
        }
      ]
    }
  ]
}